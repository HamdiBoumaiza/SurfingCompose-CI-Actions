name: Android CI-CD

on: push

jobs:
  build: # build app
    name: üî® Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Access RAPID_API_KEY
      env:
        RAPID_API_KEY: $
      run: echo RAPID_API_KEY=\"$RAPID_API_KEY\" > ./local.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build # Execute gradle script to perform lint check

  lint-check: # Run lint checks
    name: üîç Lint
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint check
        run: ./gradlew lint

      - name: Generate lint report
        uses: actions/upload-artifact@v3
        with: # Define extra parameters
          name: lint_report.html # Name of the artifact to be uploaded
          path: app/build/reports/lint-results-debug.html


  unit-tests: # Run unit tests
    name: üß™ Unit Tests
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - run: echo "Execute unit tests."
    - name: Unit Test
      run: ./gradlew testDebugUnitTest

    - name: Android Test Report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }}

  generate-apk: # Generate debug apk
    name: ‚öôÔ∏è Generate APK
    needs: [ build, unit-tests, lint-check ]
    if: github.ref == 'refs/heads/main' || 'refs/heads/develop'   # run only on main and develop branch
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Build debug apk
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload debug apk
        uses: actions/upload-artifact@v3
        with:
          name: Android-APP-APK
          path: app/build/outputs/apk/debug/app-debug.apk

  firebase-deploy: # Deploy app to firebase app distribution
    name: üì® Deploy to Firebase App Distribution
    needs: [ generate-apk ]
    if: github.ref == 'refs/heads/main' # run only on main branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: Android-APP-APK

      - name: Upload Artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: Android-APP-APK/app-debug.apk
          releaseNotesFile : app/release_notes/release-notes.txt